# Neko Actions - Automated Deployment of Neko via GitHub Actions

This repository ([dikeckaan/neko-actions](https://github.com/dikeckaan/neko-actions)) automates the deployment of [m1k1o/neko](https://github.com/m1k1o/neko) using GitHub Actions. It integrates with Telegram for control and monitoring.

## Features
- **Deploy Neko instances** using GitHub Actions
- **Monitor instance status** via Telegram bot
- **Stop running instances** through interactive Telegram messages
- **Restricted access** to authorized users only

## How It Works
1. **GitHub Actions Workflow:** Automatically triggers and deploys a Neko instance.
2. **Telegram Bot Integration:** Sends deployment details (including URLs and credentials) to a specified Telegram user.
3. **Cancel Button Handling:** When the 'Cancel' button in Telegram is clicked, it stops the corresponding GitHub Actions run.

## Setup
### 1. Create a Telegram Bot
- Use [BotFather](https://t.me/botfather) on Telegram to create a bot.
- Obtain the **Bot Token**.

### 2. Configure `.env` File
Create a `.env` file in the repository root with the following values:
```ini
GITHUB_TOKEN=your_github_personal_access_token
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
ALLOWED_USER_ID=your_telegram_user_id
```

### 3. Deploy via GitHub Actions
- Trigger the deployment manually or through the `/newchrome` command in Telegram.
- The bot will send a message containing the Neko instance details.
- Click the **Cancel** button to stop a running instance.

## Usage
### Start a New Deployment
Send the following command in Telegram:
```
/newchrome
```
The bot will reply with the deployment details, including:
- Bore Tunnel & LocalTunnel URLs
- Public IP Address
- Neko Passwords
- Run ID with a **Cancel** button

### Stop a Running Instance
- Click the **Cancel** button on the message sent by the bot.
- Alternatively, send the following command:
```
/stop <RUN_ID>
```
Where `<RUN_ID>` is the identifier from the bot's message.

## Security
- The bot only responds to the **ALLOWED_USER_ID** defined in the `.env` file.
- Tokens and sensitive data are securely stored in GitHub Secrets.

## License
This project is licensed under the **GNU Affero General Public License v3.0 (AGPL-3.0)**.
See the [LICENSE](./LICENSE) file for more details.

## Contribution
Feel free to contribute by opening an issue or pull request!

